---
volumes:
  postgres_data_keycloak:
    driver: local

services:
  kafka-1:
    #image: confluentinc/cp-kafka:7.5.1
    image: testing:1.5.0
    hostname: kafka-1
    container_name: kafka-1
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - 9092:9092
    volumes:
      - ./config/kafka_server_admin_jaas.conf:/etc/kafka/kafka_server_admin_jaas.conf
      - ./certs/broker_1/b1_keystore.p12:/etc/kafka/secrets/b1_keystore.p12
      - ./certs/broker_1/b1_keystore_password.txt:/etc/kafka/secrets/b1_keystore_password.txt
      - ./certs/cert_authority/cacert.pem:/etc/pki/ca-trust/source/anchors/cacert.pem
      - ./certs/cert_authority/client.truststore.p12:/etc/kafka/secrets/client.truststore.p12
      - ./certs/cert_authority/truststore_password.txt:/etc/kafka/secrets/truststore_password.txt
      - ./consumer_oauth/fer-kafka/target/fer-kafka-1.0-SNAPSHOT.jar:/usr/share/java/kafka/fer-kafka-1.0-SNAPSHOT.jar
      - ./consumer_oauth/fer-kafka/target/fer-kafka-1.0-SNAPSHOT.jar:/usr/share/java/cp-base-new/fer-kafka-1.0-SNAPSHOT.jar
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    environment:
      ### REQUIRED
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1.oauthkafka.xyz:29093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      ### FAILS WITHOUT THESE
      CLUSTER_ID: 'snEqtedQR4-9lMvInatV6Q'
      KAFKA_ADVERTISED_LISTENERS: 'SASL_SSL://kafka-1.oauthkafka.xyz:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,SASL_SSL:SASL_SSL' 
      KAFKA_LISTENERS: 'CONTROLLER://kafka-1:29093,SASL_SSL://SASL_SSL://0.0.0.0:9092' 
      ### ADDITIONAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: OAUTHBEARER
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: false
      KAFKA_SUPER_USERS: 'User:admin'
      ### KAFKA_OPTS
      KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/kafka_server_admin_jaas.conf'
      ### LOGGING; for additonal options take a look at https://docs.confluent.io/platform/current/installation/docker/development.html#log-to-external-volumes
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      ### SSL
      KAFKA_SSL_KEYSTORE_FILENAME: b1_keystore.p12
      KAFKA_SSL_TRUSTSTORE_FILENAME: client.truststore.p12
      KAFKA_SSL_KEY_CREDENTIALS: b1_keystore_password.txt
      KAFKA_SSL_KEYSTORE_CREDENTIALS: b1_keystore_password.txt
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_password.txt
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_KEYSTORE_TYPE: PKCS12
      KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
      ### SEEMS REDUNDANT BUT INTERBROKER SSL IS NOT WORKING IF FOLLOWING ARE NOT SPECIFIED
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/b1_keystore.p12
      KAFKA_SSL_KEYSTORE_PASSWORD: b1_keystore_password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/client.truststore.p12
      KAFKA_SSL_TRUSTSTORE_PASSWORD: truststore_password
      ### OAUTH OVERRIDE (documentation error regarding underscores in env name https://docs.confluent.io/platform/current/installation/docker/config-reference.html)
      KAFKA_LISTENER_NAME_SASL__SSL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.example.OAuthLoginHandler
      KAFKA_LISTENER_NAME_SASL__SSL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.example.JwtTokenHandler
      KAFKA_LISTENER_NAME_CONTROLLER_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.example.OAuthLoginHandler
      KAFKA_LISTENER_NAME_CONTROLLER_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.example.JwtTokenHandler
      #KAFKA_LISTENER_NAME_SASL_SSL_OAUTHBEARER_SASL_OAUTHBEARER_JWKS_ENDPOINT_URL: https://keycloak:8443/auth/realms/mile/protocol/openid-connect/certs
      KAFKA_SASL_OAUTHBEARER_SUB_CLAIM_NAME: azp
      KAFKA_SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL: https://keycloak:8443/auth/realms/mile/protocol/openid-connect/token



  # kafka-2:
  #   image: confluentinc/cp-kafka:7.5.1
  #   hostname: kafka-2
  #   container_name: kafka-2
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./config/kafka_server_admin_jaas.conf:/etc/kafka/kafka_server_admin_jaas.conf
  #     - ./certs/broker_2/b2_keystore.p12:/etc/kafka/secrets/b2_keystore.p12
  #     - ./certs/broker_2/b2_keystore_password.txt:/etc/kafka/secrets/b2_keystore_password.txt
  #     - ./certs/cert_authority/client.truststore.p12:/etc/kafka/secrets/client.truststore.p12
  #     - ./certs/cert_authority/truststore_password.txt:/etc/kafka/secrets/truststore_password.txt
  #   environment:
  #     ### REQUIRED
  #     KAFKA_PROCESS_ROLES: 'broker'
  #     KAFKA_NODE_ID: 2
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:29093'
  #     KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  #     ### FAILS WITHOUT THESE
  #     CLUSTER_ID: 'snEqtedQR4-9lMvInatV6Q'
  #     KAFKA_ADVERTISED_LISTENERS: 'SASL_SSL://kafka-2:9093'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,SASL_SSL:SASL_SSL' 
  #     KAFKA_LISTENERS: 'SASL_SSL://kafka-2:9093' 
  #     ### ADDITIONAL
  #     KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
  #     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER
  #     KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
  #     KAFKA_OAUTHBEARER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
  #     KAFKA_LISTENER_NAME_SASL_SSL_OAUTHBEARER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
  #     KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: OAUTHBEARER
  #     KAFKA_SECURITY_PROTOCOL: SASL_SSL
  #     KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: false
  #     KAFKA_SUPER_USERS: 'User:admin'
  #     ### KAFKA_OPTS
  #     KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/kafka_server_admin_jaas.conf'
  #     ### LOGGING; for additonal options take a look at https://docs.confluent.io/platform/current/installation/docker/development.html#log-to-external-volumes
  #     KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"  
  #     ### SSL
  #     KAFKA_SSL_KEYSTORE_FILENAME: b2_keystore.p12
  #     KAFKA_SSL_TRUSTSTORE_FILENAME: client.truststore.p12
  #     KAFKA_SSL_KEY_CREDENTIALS: b2_keystore_password.txt
  #     KAFKA_SSL_KEYSTORE_CREDENTIALS: b2_keystore_password.txt
  #     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_password.txt
  #     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
  #     KAFKA_SSL_KEYSTORE_TYPE: PKCS12
  #     KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
  #     ### SEEMS REDUNDANT BUT INTERBROKER SSL IS NOT WORKING IF FOLLOWING ARE NOT SPECIFIED
  #     KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/b2_keystore.p12
  #     KAFKA_SSL_KEYSTORE_PASSWORD: b2_keystore_password
  #     KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/client.truststore.p12
  #     KAFKA_SSL_TRUSTSTORE_PASSWORD: truststore_password  
  #   depends_on:
  #     - kafka-1

  # kafka-3:
  #   image: confluentinc/cp-kafka:7.5.1
  #   hostname: kafka-3
  #   container_name: kafka-3
  #   ports:
  #     - "9094:9094"
  #   volumes:
  #     - ./config/kafka_server_admin_jaas.conf:/etc/kafka/kafka_server_admin_jaas.conf
  #     - ./certs/broker_3/b3_keystore.p12:/etc/kafka/secrets/b3_keystore.p12
  #     - ./certs/broker_3/b3_keystore_password.txt:/etc/kafka/secrets/b3_keystore_password.txt
  #     - ./certs/cert_authority/client.truststore.p12:/etc/kafka/secrets/client.truststore.p12
  #     - ./certs/cert_authority/truststore_password.txt:/etc/kafka/secrets/truststore_password.txt
  #   environment:
  #     ### REQUIRED
  #     KAFKA_PROCESS_ROLES: 'broker'
  #     KAFKA_NODE_ID: 3
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:29093'
  #     KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  #     ### FAILS WITHOUT THESE
  #     CLUSTER_ID: 'snEqtedQR4-9lMvInatV6Q'
  #     KAFKA_ADVERTISED_LISTENERS: 'SASL_SSL://kafka-3:9094'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:SASL_SSL,SASL_SSL:SASL_SSL' 
  #     KAFKA_LISTENERS: 'SASL_SSL://kafka-3:9094' 
  #     ### ADDITIONAL
  #     KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_SSL
  #     KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER
  #     KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
  #     KAFKA_OAUTHBEARER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
  #     KAFKA_LISTENER_NAME_SASL_SSL_OAUTHBEARER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
  #     KAFKA_SASL_MECHANISM_CONTROLLER_PROTOCOL: OAUTHBEARER
  #     KAFKA_SECURITY_PROTOCOL: SASL_SSL
  #     KAFKA_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: false
  #     KAFKA_SUPER_USERS: 'User:admin'
  #     ### KAFKA_OPTS
  #     KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/kafka_server_admin_jaas.conf'
  #     ### LOGGING; for additonal options take a look at https://docs.confluent.io/platform/current/installation/docker/development.html#log-to-external-volumes
  #     KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
  #     ### SSL
  #     KAFKA_SSL_KEYSTORE_FILENAME: b3_keystore.p12
  #     KAFKA_SSL_TRUSTSTORE_FILENAME: client.truststore.p12
  #     KAFKA_SSL_KEY_CREDENTIALS: b3_keystore_password.txt
  #     KAFKA_SSL_KEYSTORE_CREDENTIALS: b3_keystore_password.txt
  #     KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_password.txt
  #     KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
  #     KAFKA_SSL_KEYSTORE_TYPE: PKCS12
  #     KAFKA_SSL_TRUSTSTORE_TYPE: PKCS12
  #     ### SEEMS REDUNDANT BUT INTERBROKER SSL IS NOT WORKING IF FOLLOWING ARE NOT SPECIFIED
  #     KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/b2_keystore.p12
  #     KAFKA_SSL_KEYSTORE_PASSWORD: b3_keystore_password
  #     KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/client.truststore.p12
  #     KAFKA_SSL_TRUSTSTORE_PASSWORD: truststore_password  
  #   depends_on:
  #     - kafka-1

#   kafka-security-manager:
#     image: conduktor/kafka-security-manager:latest
#     environment:
#       KSM_READONLY: "false"
#       AUTHORIZER_CLASS: io.conduktor.ksm.compat.AdminClientAuthorizer
#       #AUTHORIZER_ZOOKEEPER_CONNECT: "zoo1:2181"
#       # FILE:
#       SOURCE_CLASS: "io.conduktor.ksm.source.FileSourceAcl"
#       SOURCE_FILE_FILENAME: "/opt/docker/acls/preprod/main.yml"
      
#       ADMIN_CLIENT_BOOTSTRAP_SERVERS: kafka-1:9092
#       ADMIN_CLIENT_SECURITY_PROTOCOL: SASL_SSL
#       ADMIN_CLIENT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required unsecuredLoginStringClaim_sub="admin";'

#       ADMIN_CLIENT_SASL_MECHANISM: OAUTHBEARER
#       KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/kafka_client_admin_jaas.conf'

#       ADMIN_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/client.truststore.p12
#       ADMIN_CLIENT_SSL_TRUSTSTORE_PASSWORD: truststore_password
#       # GITHUB:
# #      SOURCE_CLASS: "io.conduktor.ksm.source.GitHubSourceAcl"
# #      SOURCE_GITHUB_USER: "conduktor"
# #      SOURCE_GITHUB_REPO: "kafka-security-manager-example"
# #      SOURCE_GITHUB_FILEPATH: "acls.csv"

#       # SOURCE ACLS FROM KAFKA INSTEAD
#       # THIS WON't WORK WITH THIS DOCKER COMPOSE FILE AS IT
#       # REQUIRES KAFKA TO BE CONFIGURED IN SECURED MODE
#       # PR ACCEPTED :)
      
#       # AUTHORIZER_CLASS: "io.conduktor.ksm.compat.AdminClientAuthorizer"
#       # ADMIN_CLIENT_BOOTSTRAP_SERVERS: "kafka1:19092"
#       # set ADMIN_CLIENT_SECURITY_PROTOCOL, ADMIN_CLIENT_SASL_JAAS_CONFIG, ADMIN_CLIENT_SASL_MECHANISM, ADMIN_CLIENT_SSL_KEY_PASSWORD, ADMIN_CLIENT_SSL_KEYSTORE_LOCATION, ADMIN_CLIENT_SSL_KEYSTORE_PASSWORD, ADMIN_CLIENT_SSL_TRUSTSTORE_LOCATION, ADMIN_CLIENT_SSL_TRUSTSTORE_PASSWORD for a secure Kafka setup
#     volumes:
#       - ${PWD}/acls/preprod:/opt/docker/acls/preprod:ro
#       - ./config/ksm_admin_jaas.conf.conf:/etc/kafka/ksm_admin_jaas.conf.conf
#       - ./certs/cert_authority/client.truststore.p12:/etc/kafka/secrets/client.truststore.p12
#     depends_on:
#       - kafka-1
# #      - kafka-2
# #      - kafka-3

  # postgres_keycloak:
  #   hostname: postgres_keycloak
  #   image: postgres:15-alpine3.17
  #   volumes:
  #     - postgres_data_keycloak:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: Pa55word!

  # keycloak:
  #   hostname: keycloak
  #   image: bitnami/keycloak:21.0.2
  #   depends_on:
  #     - postgres_keycloak
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --fail -k https://keycloak:8443/auth/realms/master/.well-known/openid-configuration"]
  #   ports:
  #     - 8080:8080
  #     - 8443:8443
  #   volumes:
  #     - ./certs/keycloak/keycloak_keystore.p12:/opt/bitnami/keycloak/certs/keystore.p12
  #     - ./certs/cert_authority/client.truststore.p12:/opt/bitnami/keycloak/certs/truststore.p12
  #   environment:
  #     KEYCLOAK_DATABASE_VENDOR: postgresql
  #     KEYCLOAK_DATABASE_HOST: postgres_keycloak
  #     KEYCLOAK_DATABASE_NAME: keycloak
  #     KEYCLOAK_DATABASE_USER: keycloak
  #     KEYCLOAK_DATABASE_PASSWORD: Pa55word!

  #     KEYCLOAK_ADMIN_USER: admin
  #     KEYCLOAK_ADMIN_PASSWORD: Pa55word!
  #     KC_HTTP_RELATIVE_PATH: "/auth"
  #     ### HTTPS
  #     KEYCLOAK_ENABLE_HTTPS: true
  #     #KEYCLOAK_HTTPS_PORT: 8443
  #     KEYCLOAK_HTTPS_KEY_STORE_FILE: /opt/bitnami/keycloak/certs/keystore.p12
  #     KEYCLOAK_HTTPS_TRUST_STORE_FILE: /opt/bitnami/keycloak/certs/truststore.p12
  #     KEYCLOAK_HTTPS_KEY_STORE_PASSWORD: keycloak_keystore_password
  #     KEYCLOAK_HTTPS_TRUST_STORE_PASSWORD: truststore_password
  #     #KEYCLOAK_HTTPS_USE_PEM: Set to true to configure HTTPS using PEM certificates'. Default: false.
  #     #KEYCLOAK_HTTPS_CERTIFICATE_FILE: Path to the PEM certificate file (e.g. /opt/bitnami/keycloak/certs/tls.crt). No defaults.
  #     #KEYCLOAK_HTTPS_CERTIFICATE_KEY_FILE: Path to the PEM key file (e.g. /opt/bitnami/keycloak/certs/tls.key). No defaults



#   kafka-security-manager-to-do:
#     image: testbuidl:latest
#     environment:
#       KSM_READONLY: "true"
#       AUTHORIZER_CLASS: io.conduktor.ksm.compat.AdminClientAuthorizer
#       #AUTHORIZER_ZOOKEEPER_CONNECT: "zoo1:2181"
#       # FILE:
#       SOURCE_CLASS: "io.conduktor.ksm.source.FileSourceAcl"
#       SOURCE_FILE_FILENAME: "/opt/docker/acls/preprod/main.yml"
      
#       ADMIN_CLIENT_BOOTSTRAP_SERVERS: kafka-1:9092
#       ADMIN_CLIENT_SECURITY_PROTOCOL: SASL_SSL
#       ADMIN_CLIENT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId=admin clientSecret=VIoYaq0Oy5ybpkyDNdg6DcTvnqFpDQgb scope=profile;'
      
#       ADMIN_CLIENT_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.example.KSMLoginHandler
#       ADMIN_CLIENT_SASL_MECHANISM: OAUTHBEARER
#       ADMIN_CLIENT_SASL_OAUTHBEARER_SUB_CLAIM_NAME: azp
      
#       #KAFKA_OPTS: '-Djava.security.auth.login.config=/etc/kafka/kafka_client_admin_jaas.conf'

#       ADMIN_CLIENT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/client.truststore.p12
#       ADMIN_CLIENT_SSL_TRUSTSTORE_PASSWORD: AVC8EGcfWow71zykmnsL

#       NOTIFICATION_CLASS: io.conduktor.ksm.notification.ConsoleJsonNotification
#       KSM_REFRESH_FREQUENCY_MS: 
#       TO_DO_FILE_DESTINATION: /opt/docker/bin/to_do.json
#       # GITHUB:
# #      SOURCE_CLASS: "io.conduktor.ksm.source.GitHubSourceAcl"
# #      SOURCE_GITHUB_USER: "conduktor"
# #      SOURCE_GITHUB_REPO: "kafka-security-manager-example"
# #      SOURCE_GITHUB_FILEPATH: "acls.csv"

#       # SOURCE ACLS FROM KAFKA INSTEAD
#       # THIS WON't WORK WITH THIS DOCKER COMPOSE FILE AS IT
#       # REQUIRES KAFKA TO BE CONFIGURED IN SECURED MODE
#       # PR ACCEPTED :)
      
#       # AUTHORIZER_CLASS: "io.conduktor.ksm.compat.AdminClientAuthorizer"
#       # ADMIN_CLIENT_BOOTSTRAP_SERVERS: "kafka1:19092"
#       # set ADMIN_CLIENT_SECURITY_PROTOCOL, ADMIN_CLIENT_SASL_JAAS_CONFIG, ADMIN_CLIENT_SASL_MECHANISM, ADMIN_CLIENT_SSL_KEY_PASSWORD, ADMIN_CLIENT_SSL_KEYSTORE_LOCATION, ADMIN_CLIENT_SSL_KEYSTORE_PASSWORD, ADMIN_CLIENT_SSL_TRUSTSTORE_LOCATION, ADMIN_CLIENT_SSL_TRUSTSTORE_PASSWORD for a secure Kafka setup
#     volumes:
#       - ${PWD}/acls/preprod:/opt/docker/acls/preprod:ro
#       - ./config/ksm_admin_jaas.conf.conf:/etc/kafka/ksm_admin_jaas.conf.conf
#       - ./certs/cert_authority/client.truststore.p12:/etc/kafka/secrets/client.truststore.p12
# #    depends_on:
# #      - kafka-1
# #      - kafka-2
# #      - kafka-3
