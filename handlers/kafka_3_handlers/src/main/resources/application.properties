bootstrap.servers=kafka-1.oauthkafka.xyz:9092
#sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#    unsecuredLoginStringClaim_sub="ADM_broker1";
security.protocol=SASL_SSL
sasl.mechanism=OAUTHBEARER

#sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginCallbackHandler

sasl.login.callback.handler.class=org.example.SecuredOAuthLoginHandler


sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
    clientId="client_id" \
    clientSecret="client_secret" \
    scope="profile" \
    ssl.protocol="SSL";
sasl.oauthbearer.token.endpoint.url=https://keycloak.oauthkafka.xyz:8443/auth/realms/FER/protocol/openid-connect/token
sasl.oauthbearer.sub.claim.name=azp

ssl.truststore.location=/Users/hrvojerom/faks/diplomski_projekt/oauth-kafka/certs/cert_authority/client.truststore.p12
ssl.truststore.password=truststore_password
ssl.endpoint.identification.algorithm=

key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer

key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer